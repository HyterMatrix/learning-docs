"use strict";(self.webpackChunklearning_docs_2_x=self.webpackChunklearning_docs_2_x||[]).push([[1640],{2863:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-eff14018",path:"/python/python-basics/02-data-type.html",title:"第二章 数据类型",lang:"zh-CN",frontmatter:{title:"第二章 数据类型"},excerpt:"",headers:[{level:2,title:"1. 数字 number",slug:"_1-数字-number",children:[{level:3,title:"整型",slug:"整型",children:[]},{level:3,title:"浮点型",slug:"浮点型",children:[]},{level:3,title:"数字类型的使用",slug:"数字类型的使用",children:[]}]},{level:2,title:"2. 字符串 str",slug:"_2-字符串-str",children:[{level:3,title:"作用",slug:"作用-2",children:[]},{level:3,title:"定义",slug:"定义-2",children:[]},{level:3,title:"使用",slug:"使用",children:[]}]},{level:2,title:"3. 布尔值 bool",slug:"_3-布尔值-bool",children:[{level:3,title:"1. 作用",slug:"_1-作用",children:[]},{level:3,title:"2. 定义",slug:"_2-定义",children:[]},{level:3,title:"3. 使用",slug:"_3-使用",children:[]}]},{level:2,title:"4. 空值 None",slug:"_4-空值-none",children:[]},{level:2,title:"5. 列表 list",slug:"_5-列表-list",children:[{level:3,title:"5.1 作用",slug:"_5-1-作用",children:[]},{level:3,title:"5.2 定义",slug:"_5-2-定义",children:[]},{level:3,title:"5.3 类型转换",slug:"_5-3-类型转换",children:[]},{level:3,title:"5.4 列表的操作",slug:"_5-4-列表的操作",children:[]},{level:3,title:"5.5 列表的方法",slug:"_5-5-列表的方法",children:[]}]},{level:2,title:"6. 元组 tuple",slug:"_6-元组-tuple",children:[]},{level:2,title:"7. 字典 dict",slug:"_7-字典-dict",children:[{level:3,title:"作用",slug:"作用-3",children:[]},{level:3,title:"定义",slug:"定义-3",children:[]},{level:3,title:"使用",slug:"使用-1",children:[]}]},{level:2,title:"8. 集合 set",slug:"_8-集合-set",children:[]}],filePathRelative:"python/python-basics/02-data-type.md",git:{updatedTime:1658130428e3,contributors:[{name:"wangming",email:"wangming@ttg.cn",commits:1}]}}},8432:(n,s,a)=>{a.r(s),a.d(s,{default:()=>e});const p=(0,a(6252).uE)('<h1 id="数据类型" tabindex="-1"><a class="header-anchor" href="#数据类型" aria-hidden="true">#</a> 数据类型</h1><p>我们学习变量是为了让计算机能够像人一样去记忆事物的某种状态，而变量的值就是用来存储事物状态的，很明显事物的状态分成不同种类的（比如人的年龄，身高，职位，工资等等），所以变量值也应该有不同的类型，例如</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>salary <span class="token operator">=</span> <span class="token number">3.1</span> <span class="token comment"># 用浮点型去记录薪资</span>\nage <span class="token operator">=</span> <span class="token number">18</span> <span class="token comment"># 用整型去记录年龄</span>\nname <span class="token operator">=</span> <span class="token string">&#39;lili&#39;</span> <span class="token comment"># 用字符串类型去记录人名</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="_1-数字-number" tabindex="-1"><a class="header-anchor" href="#_1-数字-number" aria-hidden="true">#</a> 1. 数字 number</h2><h3 id="整型" tabindex="-1"><a class="header-anchor" href="#整型" aria-hidden="true">#</a> 整型</h3><h4 id="作用" tabindex="-1"><a class="header-anchor" href="#作用" aria-hidden="true">#</a> 作用</h4><p>用来记录人的年龄，出生年份，学生人数等整数相关的状态</p><h4 id="定义" tabindex="-1"><a class="header-anchor" href="#定义" aria-hidden="true">#</a> 定义</h4><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>age<span class="token operator">=</span><span class="token number">18</span>\nbirthday<span class="token operator">=</span><span class="token number">1990</span>\nstudent_count<span class="token operator">=</span><span class="token number">48</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="浮点型" tabindex="-1"><a class="header-anchor" href="#浮点型" aria-hidden="true">#</a> 浮点型</h3><h4 id="作用-1" tabindex="-1"><a class="header-anchor" href="#作用-1" aria-hidden="true">#</a> 作用</h4><p>用来记录人的身高，体重，薪资等小数相关的状态</p><h4 id="定义-1" tabindex="-1"><a class="header-anchor" href="#定义-1" aria-hidden="true">#</a> 定义</h4><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>height<span class="token operator">=</span><span class="token number">173</span>\nweight<span class="token operator">=</span><span class="token number">103.5</span>\nsalary<span class="token operator">=</span><span class="token number">15000.89</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="数字类型的使用" tabindex="-1"><a class="header-anchor" href="#数字类型的使用" aria-hidden="true">#</a> 数字类型的使用</h3><p>1 、数学运算</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> a <span class="token operator">=</span> <span class="token number">1</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> b <span class="token operator">=</span> <span class="token number">3</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> c <span class="token operator">=</span> a <span class="token operator">+</span> b\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> c\n<span class="token number">4</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>2、比较大小</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> x <span class="token operator">=</span> <span class="token number">10</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> y <span class="token operator">=</span> <span class="token number">11</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> x <span class="token operator">&gt;</span> y\n<span class="token boolean">False</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="_2-字符串-str" tabindex="-1"><a class="header-anchor" href="#_2-字符串-str" aria-hidden="true">#</a> 2. 字符串 str</h2><h3 id="作用-2" tabindex="-1"><a class="header-anchor" href="#作用-2" aria-hidden="true">#</a> 作用</h3><p>用来记录人的名字，家庭住址，性别等描述性质的状态</p><h3 id="定义-2" tabindex="-1"><a class="header-anchor" href="#定义-2" aria-hidden="true">#</a> 定义</h3><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>name <span class="token operator">=</span> <span class="token string">&#39;Tony&#39;</span>\naddress <span class="token operator">=</span> <span class="token string">&#39;上海市浦东新区&#39;</span>\nsex <span class="token operator">=</span> <span class="token string">&#39;男&#39;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>用单引号、双引号、多引号，都可以定义字符串，本质上是没有区别的，但是</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token comment">#1、需要考虑引号嵌套的配对问题</span>\nmsg <span class="token operator">=</span> <span class="token string">&quot;My name is Tony , I&#39;m 18 years old!&quot;</span> <span class="token comment">#内层有单引号，外层就需要用双引号</span>\n<span class="token comment">#2、多引号可以写多行字符串</span>\nmsg <span class="token operator">=</span> <span class="token triple-quoted-string string">&#39;&#39;&#39;\n        天下只有两种人。比如一串葡萄到手，一种人挑最好的先吃，另一种人把最好的留到最后吃。\n        照例第一种人应该乐观，因为他每吃一颗都是吃剩的葡萄里最好的；第二种人应该悲观，因为他每吃一颗都是吃剩的葡萄里最坏的。\n        不过事实却适得其反，缘故是第二种人还有希望，第一种人只有回忆。\n      &#39;&#39;&#39;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="使用" tabindex="-1"><a class="header-anchor" href="#使用" aria-hidden="true">#</a> 使用</h3><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>数字可以进行加减乘除等运算，字符串呢？也可以，但只能进行<span class="token string">&quot;相加&quot;</span>和<span class="token string">&quot;相乘&quot;</span>运算。\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> name <span class="token operator">=</span> <span class="token string">&#39;tony&#39;</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> age <span class="token operator">=</span> <span class="token string">&#39;18&#39;</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> name <span class="token operator">+</span> age <span class="token comment">#相加其实就是简单的字符串拼接</span>\n<span class="token string">&#39;tony18&#39;</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> name <span class="token operator">*</span> <span class="token number">5</span> <span class="token comment">#相乘就相当于将字符串相加了5次</span>\n<span class="token string">&#39;tonytonytonytonytony&#39;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="_3-布尔值-bool" tabindex="-1"><a class="header-anchor" href="#_3-布尔值-bool" aria-hidden="true">#</a> 3. 布尔值 bool</h2><h3 id="_1-作用" tabindex="-1"><a class="header-anchor" href="#_1-作用" aria-hidden="true">#</a> 1. 作用</h3><p>用来记录真假这两种状态</p><h3 id="_2-定义" tabindex="-1"><a class="header-anchor" href="#_2-定义" aria-hidden="true">#</a> 2. 定义</h3><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> is_ok <span class="token operator">=</span> <span class="token boolean">True</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> is_ok <span class="token operator">=</span> <span class="token boolean">False</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="_3-使用" tabindex="-1"><a class="header-anchor" href="#_3-使用" aria-hidden="true">#</a> 3. 使用</h3><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>通常用来当作判断的条件，我们将在<span class="token keyword">if</span>判断中用到它\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="_4-空值-none" tabindex="-1"><a class="header-anchor" href="#_4-空值-none" aria-hidden="true">#</a> 4. 空值 None</h2><h2 id="_5-列表-list" tabindex="-1"><a class="header-anchor" href="#_5-列表-list" aria-hidden="true">#</a> 5. 列表 list</h2><h3 id="_5-1-作用" tabindex="-1"><a class="header-anchor" href="#_5-1-作用" aria-hidden="true">#</a> 5.1 作用</h3><p>如果我们需要用一个变量记录多个学生的姓名，用数字类型是无法实现，字符串类型确实可以记录下来，比如</p><p>stu_names=&#39;张三 李四 王五&#39;，但存的目的是为了取，此时若想取出第二个学生的姓名实现起来相当麻烦，而列表类型就是专门用来记录多个同种属性的值（比如同一个班级多个学生的姓名、同一个人的多个爱好等），并且存取都十分方便</p><h3 id="_5-2-定义" tabindex="-1"><a class="header-anchor" href="#_5-2-定义" aria-hidden="true">#</a> 5.2 定义</h3><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> stu_names<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;张三&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;李四&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;王五&#39;</span><span class="token punctuation">]</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="_5-3-类型转换" tabindex="-1"><a class="header-anchor" href="#_5-3-类型转换" aria-hidden="true">#</a> 5.3 类型转换</h3><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token string">&#39;hello&#39;</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="_5-4-列表的操作" tabindex="-1"><a class="header-anchor" href="#_5-4-列表的操作" aria-hidden="true">#</a> 5.4 列表的操作</h3><p>可对列表执行所有的标准序列操作。</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token comment"># 1、列表类型是用索引来对应值，索引代表的是数据的位置，从0开始计数</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> stu_names<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;张三&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;李四&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;王五&#39;</span><span class="token punctuation">]</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> stu_names<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> \n<span class="token string">&#39;张三&#39;</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> stu_names<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>\n<span class="token string">&#39;李四&#39;</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> stu_names<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>\n<span class="token string">&#39;王五&#39;</span>\n<span class="token comment"># 2、列表可以嵌套，嵌套取值如下</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> students_info<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">&#39;tony&#39;</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">&#39;jack&#39;</span><span class="token punctuation">,</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">&#39;jason&#39;</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">&#39;play&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;sleep&#39;</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> students_info<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token comment">#取出第一个学生的第一个爱好</span>\n<span class="token string">&#39;play&#39;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h4 id="_5-4-1-修改列表-给元素赋值" tabindex="-1"><a class="header-anchor" href="#_5-4-1-修改列表-给元素赋值" aria-hidden="true">#</a> 5.4.1 修改列表：给元素赋值</h4><p>使用索引给特定位置的元素赋值</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> x <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> x<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">2</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> x\n<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h4 id="_5-4-2-删除元素" tabindex="-1"><a class="header-anchor" href="#_5-4-2-删除元素" aria-hidden="true">#</a> 5.4.2 删除元素</h4><p>使用<code>del</code>语句删除元素</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> name <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;Alice&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Beth&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Cecil&#39;</span><span class="token punctuation">]</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token keyword">del</span> name<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> name \n<span class="token punctuation">[</span><span class="token string">&#39;Alice&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Cecil&#39;</span><span class="token punctuation">]</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h4 id="_5-4-3-切片" tabindex="-1"><a class="header-anchor" href="#_5-4-3-切片" aria-hidden="true">#</a> 5.4.3 切片</h4><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> name <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token string">&#39;Perl&#39;</span><span class="token punctuation">)</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> name\n<span class="token punctuation">[</span><span class="token string">&#39;P&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;e&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;r&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;l&#39;</span><span class="token punctuation">]</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> name<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token string">&#39;ar&#39;</span><span class="token punctuation">)</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> name\n<span class="token punctuation">[</span><span class="token string">&#39;P&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;e&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;r&#39;</span><span class="token punctuation">]</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>从上述代码可知，通过使用切片赋值，可将切片替换为长度与其不同的序列</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> name <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token string">&#39;Perl&#39;</span><span class="token punctuation">)</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> name<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token string">&#39;ython&#39;</span><span class="token punctuation">)</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> name\n<span class="token punctuation">[</span><span class="token string">&#39;P&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;y&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;t&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;h&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;o&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;n&#39;</span><span class="token punctuation">]</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>使用切片赋值还可在不替换原有元素的情况下<code>插入</code>新元素</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> numbers <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> numbers<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> numbers\n<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>在这里，替换了一个空切片，相当于插入了一个序列。同理，你可以采取相反的措施来删除</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> numbers\n<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> numbers<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> numbers\n<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>上述代码与<code>del number[1:4]</code> 等效。</p><h3 id="_5-5-列表的方法" tabindex="-1"><a class="header-anchor" href="#_5-5-列表的方法" aria-hidden="true">#</a> 5.5 列表的方法</h3><blockquote><p>方法是与对象（列表、数、字符串等）联系紧密的函数。通常如下调用</p></blockquote><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token builtin">object</span><span class="token punctuation">.</span>method<span class="token punctuation">(</span>arguments<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>方法的调用与函数的调用很像，只是在方法名前加上了对象和句号。</p><h4 id="_5-5-1-apped" tabindex="-1"><a class="header-anchor" href="#_5-5-1-apped" aria-hidden="true">#</a> 5.5.1 apped</h4><blockquote><p>将一个对象附加到列表末尾</p></blockquote><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> lst <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> lst<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> lst\n<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>​ <strong>注意</strong> 与其他几个类似的方法一样，append是就地修改列表。意味着它不会返回新列表，而是直接修改就列表。</p><h4 id="_5-5-2-clear" tabindex="-1"><a class="header-anchor" href="#_5-5-2-clear" aria-hidden="true">#</a> 5.5.2 clear</h4><p>清空列表的内容</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> lst <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> lst\n<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> lst<span class="token punctuation">.</span>clear<span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> lst\n<span class="token punctuation">[</span><span class="token punctuation">]</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>这类似于切片赋值语句<code>lst[:]=[]</code>。</p><h4 id="_5-5-3-copy" tabindex="-1"><a class="header-anchor" href="#_5-5-3-copy" aria-hidden="true">#</a> 5.5.3 copy</h4><blockquote><p>复制列表</p></blockquote><p>常规复制只是将一个名称关联到列表。</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> b <span class="token operator">=</span> a\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> b<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">4</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> a\n<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>要让a和b指向不同的列表，就必须将a关联到b的副本</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> b <span class="token operator">=</span> a<span class="token punctuation">.</span>copy<span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> b<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">4</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> a\n<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>但是，这个复制也不是完全不同的，假如列表中存在可变类型。</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">]</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> b <span class="token operator">=</span> a<span class="token punctuation">.</span>copy<span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> b<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">4</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> a\n<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">]</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>这里，在列表a中可变类型也是列表，在a中存储的是指向这个列表的地址。所以b中修改了这个列表，a指向的这个地址的值也是变化的。</p><h4 id="_5-5-4-count" tabindex="-1"><a class="header-anchor" href="#_5-5-4-count" aria-hidden="true">#</a> 5.5.4 count</h4><blockquote><p>计算指定元素在列表中出现的次数</p></blockquote><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token string">&#39;to&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;be&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;or&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;not&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;to&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;be&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token string">&#39;to&#39;</span><span class="token punctuation">)</span>\n<span class="token number">2</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> x <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> x<span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>\n<span class="token number">2</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> x<span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n<span class="token number">1</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h4 id="_5-5-5-extend" tabindex="-1"><a class="header-anchor" href="#_5-5-5-extend" aria-hidden="true">#</a> 5.5.5 extend</h4><blockquote><p>同时将多个值附加到列表末尾，换而言之，就是用一个列表来扩展另一个列表。</p></blockquote><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> b <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> a<span class="token punctuation">.</span>extend<span class="token punctuation">(</span>b<span class="token punctuation">)</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> a\n<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>这里看起来像是拼接，但是有个很重要的区别，就是<code>extend</code>是修改了原有的序列（这里是a）,而拼接式是返回一个新的序列，而原序列不做变更</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> b <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> a <span class="token operator">+</span> b\n<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> a\n<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>当然拼接可以实现和<code>extend</code>类似的效果，但是效率就低一些了。</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> b <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> a <span class="token operator">=</span> a <span class="token operator">+</span> b\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> a\n<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>上述拼接操作并不是修改了a的值，而是重新赋值，即它不会修改原来的列表。要获得与<code>extend</code>相同的效果，可以将列表赋值切片：</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> b <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> a<span class="token punctuation">[</span><span class="token builtin">len</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token punctuation">]</span> <span class="token operator">=</span> b\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> a\n<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>可行，但可读性不高。</p><h4 id="_5-5-6-index" tabindex="-1"><a class="header-anchor" href="#_5-5-6-index" aria-hidden="true">#</a> 5.5.6 index</h4><blockquote><p>在列表中查找指定值第一次出现的索引</p></blockquote><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> knights <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;We&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;are&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;the&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;knights&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;who&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;say&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;ni&#39;</span><span class="token punctuation">]</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> knights<span class="token punctuation">.</span>index<span class="token punctuation">(</span><span class="token string">&#39;who&#39;</span><span class="token punctuation">)</span>\n<span class="token number">4</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> knights<span class="token punctuation">.</span>index<span class="token punctuation">(</span><span class="token string">&#39;herring&#39;</span><span class="token punctuation">)</span>\nTraceback <span class="token punctuation">(</span>most recent call last<span class="token punctuation">)</span><span class="token punctuation">:</span>\n  File <span class="token string">&quot;&lt;stdin&gt;&quot;</span><span class="token punctuation">,</span> line <span class="token number">1</span><span class="token punctuation">,</span> <span class="token keyword">in</span> <span class="token operator">&lt;</span>module<span class="token operator">&gt;</span>\nValueError<span class="token punctuation">:</span> <span class="token string">&#39;herring&#39;</span> <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token keyword">in</span> <span class="token builtin">list</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>搜索单词<code>who</code>时，发现它在索引4处</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> knights<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span>\n<span class="token string">&#39;who&#39;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>然后，搜索<code>herring</code>时候发现了异常，因为根本就没有找到这个单词，说明找不到单词时候，会发生异常。</p><h4 id="_5-5-7-insert" tabindex="-1"><a class="header-anchor" href="#_5-5-7-insert" aria-hidden="true">#</a> 5.5.7 insert</h4><blockquote><p>用于将一个对象插入列表。</p></blockquote><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> numbers <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">]</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> numbers<span class="token punctuation">.</span>insert<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">&#39;four&#39;</span><span class="token punctuation">)</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> numbers\n<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">&#39;four&#39;</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">]</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>和<code>extend</code>一样，也可以使用切片赋值来获得与<code>insert</code>一样的效果</p><div class="language-pyt ext-pyt line-numbers-mode"><pre class="language-pyt"><code>&gt;&gt;&gt; numbers = [1, 2, 3, 5, 6, 7]\n&gt;&gt;&gt; numbers[3:3] = [&#39;four&#39;]\n&gt;&gt;&gt; numbers\n[1, 2, 3, &#39;four&#39;, 5, 6, 7]\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>但是可读性没有<code>insert</code>好。</p><h4 id="_5-5-8-pop" tabindex="-1"><a class="header-anchor" href="#_5-5-8-pop" aria-hidden="true">#</a> 5.5.8 pop</h4><p>从列表中删除一个元素（末尾为最后一个元素），并返回这一元素。</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> x <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> x<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token number">3</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> x\n<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> x<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>\n<span class="token number">1</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> x\n<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p><strong>注意</strong> <code>pop</code> 是唯一既修改列表又返回一个非None值的列表方法。</p><p>使用pop可实现一种常见的数据结构 ---- 栈</p><p>5.5.9 remove</p><blockquote><p>用于删除第一个为指定值的元素</p></blockquote><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> x <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;to&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;be&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;or&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;not&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;to&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;be&#39;</span><span class="token punctuation">]</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> x<span class="token punctuation">.</span>remove<span class="token punctuation">(</span><span class="token string">&#39;be&#39;</span><span class="token punctuation">)</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> x\n<span class="token punctuation">[</span><span class="token string">&#39;to&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;or&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;not&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;to&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;be&#39;</span><span class="token punctuation">]</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> x<span class="token punctuation">.</span>remove<span class="token punctuation">(</span><span class="token string">&#39;bee&#39;</span><span class="token punctuation">)</span>\nTraceback <span class="token punctuation">(</span>most recent call last<span class="token punctuation">)</span><span class="token punctuation">:</span>\n  File <span class="token string">&quot;&lt;stdin&gt;&quot;</span><span class="token punctuation">,</span> line <span class="token number">1</span><span class="token punctuation">,</span> <span class="token keyword">in</span> <span class="token operator">&lt;</span>module<span class="token operator">&gt;</span>\nValueError<span class="token punctuation">:</span> <span class="token builtin">list</span><span class="token punctuation">.</span>remove<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">:</span> x <span class="token keyword">not</span> <span class="token keyword">in</span> <span class="token builtin">list</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>只是删除指定值的第一个元素，请注意，<code>remove</code>是就地修改且不返回值的方法之一。</p><h4 id="_5-5-10-reverse" tabindex="-1"><a class="header-anchor" href="#_5-5-10-reverse" aria-hidden="true">#</a> 5.5.10 reverse</h4><blockquote><p>按相反的顺序排列列表中的元素</p></blockquote><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> x <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> x<span class="token punctuation">.</span>reverse<span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> x\n<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><code>reverse</code>修改列表，但不返回任何值</p><h4 id="_5-5-11-sort" tabindex="-1"><a class="header-anchor" href="#_5-5-11-sort" aria-hidden="true">#</a> 5.5.11 sort</h4><blockquote><p>对列表做顺序排序。</p></blockquote><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> x <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> x<span class="token punctuation">.</span>sort<span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> x\n<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h4 id="_5-5-12-高级排序" tabindex="-1"><a class="header-anchor" href="#_5-5-12-高级排序" aria-hidden="true">#</a> 5.5.12 高级排序</h4><blockquote><p>方法<code>sort</code>接受两个可选参数： <code>key</code> 和<code>reverse</code>。 这两个参数通常是按名称指定，称为关键字。</p></blockquote><p>具体待续</p><h2 id="_6-元组-tuple" tabindex="-1"><a class="header-anchor" href="#_6-元组-tuple" aria-hidden="true">#</a> 6. 元组 tuple</h2><p>与列表一样，元组也是序列，唯一的差别就是元组是<code>不可修改</code>的。其实就是不可变的列表（list）。</p><p>元组的语法很简单，只要将一些值用逗号分隔，就能自动创建一个元组</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span>\n<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="_7-字典-dict" tabindex="-1"><a class="header-anchor" href="#_7-字典-dict" aria-hidden="true">#</a> 7. 字典 dict</h2><h3 id="作用-3" tabindex="-1"><a class="header-anchor" href="#作用-3" aria-hidden="true">#</a> 作用</h3><p>如果我们需要用一个变量记录多个值，但多个值是不同属性的，比如人的姓名、年龄、身高，用列表可以存，但列表是用索引对应值的，而索引不能明确地表示值的含义，这就用到字典类型，字典类型是用key：value形式来存储数据，其中key可以对value有描述性的功能</p><h3 id="定义-3" tabindex="-1"><a class="header-anchor" href="#定义-3" aria-hidden="true">#</a> 定义</h3><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> person_info<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">:</span><span class="token string">&#39;tony&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;age&#39;</span><span class="token punctuation">:</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token string">&#39;height&#39;</span><span class="token punctuation">:</span><span class="token number">185.3</span><span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="使用-1" tabindex="-1"><a class="header-anchor" href="#使用-1" aria-hidden="true">#</a> 使用</h3><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token comment"># 1、字典类型是用key来对应值，key可以对值有描述性的功能，通常为字符串类型</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> person_info<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">:</span><span class="token string">&#39;tony&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;age&#39;</span><span class="token punctuation">:</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token string">&#39;height&#39;</span><span class="token punctuation">:</span><span class="token number">185.3</span><span class="token punctuation">}</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> person_info<span class="token punctuation">[</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">]</span>\n<span class="token string">&#39;tony&#39;</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> person_info<span class="token punctuation">[</span><span class="token string">&#39;age&#39;</span><span class="token punctuation">]</span>\n<span class="token number">18</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> person_info<span class="token punctuation">[</span><span class="token string">&#39;height&#39;</span><span class="token punctuation">]</span>\n<span class="token number">185.3</span>\n<span class="token comment"># 2、字典可以嵌套，嵌套取值如下</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> students<span class="token operator">=</span><span class="token punctuation">[</span>\n<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token punctuation">{</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">:</span><span class="token string">&#39;tony&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;age&#39;</span><span class="token punctuation">:</span><span class="token number">38</span><span class="token punctuation">,</span><span class="token string">&#39;hobbies&#39;</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">&#39;play&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;sleep&#39;</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token punctuation">{</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">:</span><span class="token string">&#39;jack&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;age&#39;</span><span class="token punctuation">:</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token string">&#39;hobbies&#39;</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">&#39;read&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;sleep&#39;</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token punctuation">{</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">:</span><span class="token string">&#39;rose&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;age&#39;</span><span class="token punctuation">:</span><span class="token number">58</span><span class="token punctuation">,</span><span class="token string">&#39;hobbies&#39;</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">&#39;music&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;read&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;sleep&#39;</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token punctuation">]</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> students<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">&#39;hobbies&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token comment">#取第二个学生的第二个爱好</span>\n<span class="token string">&#39;sleep&#39;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h2 id="_8-集合-set" tabindex="-1"><a class="header-anchor" href="#_8-集合-set" aria-hidden="true">#</a> 8. 集合 set</h2>',139),t={},e=(0,a(3744).Z)(t,[["render",function(n,s){return p}]])}}]);