"use strict";(self.webpackChunklearning_docs_2_x=self.webpackChunklearning_docs_2_x||[]).push([[963],{806:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-6832dbc6",path:"/php/php-code-block/",title:"PHP代码块",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"在PHP代码中做ping",slug:"在php代码中做ping",children:[]},{level:2,title:"读取pfx证书",slug:"读取pfx证书",children:[]}],filePathRelative:"php/php-code-block/README.md",git:{updatedTime:1658130428e3,contributors:[{name:"wangming",email:"wangming@ttg.cn",commits:1}]}}},2142:(n,s,a)=>{a.r(s),a.d(s,{default:()=>e});const p=(0,a(6252).uE)('<h1 id="php代码块" tabindex="-1"><a class="header-anchor" href="#php代码块" aria-hidden="true">#</a> PHP代码块</h1><h2 id="在php代码中做ping" tabindex="-1"><a class="header-anchor" href="#在php代码中做ping" aria-hidden="true">#</a> 在PHP代码中做ping</h2><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token comment">// ping 域名</span>\n<span class="token keyword">function</span> <span class="token function-definition function">pingAddress</span><span class="token punctuation">(</span><span class="token variable">$address</span><span class="token punctuation">,</span><span class="token variable">$proxy</span><span class="token operator">=</span><span class="token constant boolean">false</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token variable">$status</span> <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">strcasecmp</span><span class="token punctuation">(</span><span class="token constant">PHP_OS</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;WINNT&#39;</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token comment">// Windows 服务器下</span>\n            <span class="token variable">$pingresult</span> <span class="token operator">=</span> <span class="token function">exec</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;ping -n 1 <span class="token interpolation"><span class="token punctuation">{</span><span class="token variable">$address</span><span class="token punctuation">}</span></span>&quot;</span><span class="token punctuation">,</span> <span class="token variable">$outcome</span><span class="token punctuation">,</span> <span class="token variable">$status</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span> <span class="token keyword">elseif</span> <span class="token punctuation">(</span><span class="token function">strcasecmp</span><span class="token punctuation">(</span><span class="token constant">PHP_OS</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;Linux&#39;</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token comment">// Linux 服务器下</span>\n            <span class="token variable">$pingresult</span> <span class="token operator">=</span> <span class="token function">exec</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;ping -c 1 <span class="token interpolation"><span class="token punctuation">{</span><span class="token variable">$address</span><span class="token punctuation">}</span></span>&quot;</span><span class="token punctuation">,</span> <span class="token variable">$outcome</span><span class="token punctuation">,</span> <span class="token variable">$status</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token keyword">elseif</span> <span class="token punctuation">(</span><span class="token function">strcasecmp</span><span class="token punctuation">(</span><span class="token constant">PHP_OS</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;Darwin&#39;</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n            <span class="token comment">// MacOS 下</span>\n            <span class="token variable">$pingresult</span> <span class="token operator">=</span> <span class="token function">exec</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;ping -c 1 <span class="token interpolation"><span class="token punctuation">{</span><span class="token variable">$address</span><span class="token punctuation">}</span></span>&quot;</span><span class="token punctuation">,</span> <span class="token variable">$outcome</span><span class="token punctuation">,</span> <span class="token variable">$status</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token number">0</span> <span class="token operator">==</span> <span class="token variable">$status</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token variable">$status</span> <span class="token operator">=</span> <span class="token constant boolean">true</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n            <span class="token variable">$status</span> <span class="token operator">=</span> <span class="token constant boolean">false</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token keyword">return</span> <span class="token variable">$status</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><h2 id="读取pfx证书" tabindex="-1"><a class="header-anchor" href="#读取pfx证书" aria-hidden="true">#</a> 读取pfx证书</h2><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>\n  \n<span class="token variable">$certPath</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;./test.pfx&#39;</span><span class="token punctuation">;</span>\n<span class="token variable">$certPd</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;123456&#39;</span><span class="token punctuation">;</span>\n<span class="token variable">$pkcs12certdata</span> <span class="token operator">=</span> <span class="token function">file_get_contents</span> <span class="token punctuation">(</span> <span class="token variable">$certPath</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$pkcs12certdata</span> <span class="token operator">===</span> <span class="token constant boolean">false</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>\n  <span class="token keyword">exit</span> <span class="token punctuation">(</span><span class="token variable">$certPath</span> <span class="token operator">.</span> <span class="token string double-quoted-string">&quot;读取失败。&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token function">openssl_pkcs12_read</span> <span class="token punctuation">(</span> <span class="token variable">$pkcs12certdata</span><span class="token punctuation">,</span> <span class="token variable">$certs</span><span class="token punctuation">,</span> <span class="token variable">$certPd</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token variable">$x509data</span> <span class="token operator">=</span> <span class="token variable">$certs</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;cert&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token function">openssl_x509_read</span> <span class="token punctuation">(</span> <span class="token variable">$x509data</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token variable">$certdata</span> <span class="token operator">=</span> <span class="token function">openssl_x509_parse</span> <span class="token punctuation">(</span> <span class="token variable">$x509data</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token variable">$cert</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;certId&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$certdata</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;serialNumber&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token variable">$cert</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;certIdHex&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$certdata</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;serialNumberHex&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token variable">$cert</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;key&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$certs</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;pkey&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token variable">$cert</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;cert&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$x509data</span><span class="token punctuation">;</span>\n\n<span class="token keyword">echo</span> <span class="token variable">$cert</span><span class="token punctuation">;</span>\n</span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div>',5),t={},e=(0,a(3744).Z)(t,[["render",function(n,s){return p}]])}}]);