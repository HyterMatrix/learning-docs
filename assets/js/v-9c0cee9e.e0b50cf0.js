"use strict";(self.webpackChunklearning_docs_2_x=self.webpackChunklearning_docs_2_x||[]).push([[3397],{5163:(n,a,s)=>{s.r(a),s.d(a,{data:()=>t});const t={key:"v-9c0cee9e",path:"/java/spring-boot/",title:"序 Spring Boot 入门",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"Spring Boot 简介",slug:"spring-boot-简介",children:[]},{level:2,title:"优点",slug:"优点",children:[]},{level:2,title:"微服务",slug:"微服务",children:[]},{level:2,title:"环境准备",slug:"环境准备",children:[{level:3,title:"MAVEN设置；",slug:"maven设置",children:[]},{level:3,title:"IDEA设置",slug:"idea设置",children:[]}]},{level:2,title:"Spring Boot HelloWorld",slug:"spring-boot-helloworld",children:[{level:3,title:"创建一个maven工程；（jar）",slug:"创建一个maven工程-jar",children:[]},{level:3,title:"导入spring boot相关的依赖",slug:"导入spring-boot相关的依赖",children:[]},{level:3,title:"编写一个主程序；启动Spring Boot应用",slug:"编写一个主程序-启动spring-boot应用",children:[]},{level:3,title:"编写相关的Controller、Service",slug:"编写相关的controller、service",children:[]},{level:3,title:"运行主程序测试",slug:"运行主程序测试",children:[]},{level:3,title:"简化部署",slug:"简化部署",children:[]}]},{level:2,title:"Hello World 探究",slug:"hello-world-探究",children:[{level:3,title:"POMW文件",slug:"pomw文件",children:[]},{level:3,title:"主程序类，主入口类",slug:"主程序类-主入口类",children:[]}]},{level:2,title:"使用Spring Initializer快速创建Spring Boot项目",slug:"使用spring-initializer快速创建spring-boot项目",children:[{level:3,title:"IDEA：使用 Spring Initializer快速创建项目",slug:"idea-使用-spring-initializer快速创建项目",children:[]},{level:3,title:"STS使用 Spring Starter Project快速创建项目",slug:"sts使用-spring-starter-project快速创建项目",children:[]}]}],filePathRelative:"java/spring-boot/README.md",git:{updatedTime:1658130428e3,contributors:[{name:"wangming",email:"wangming@ttg.cn",commits:1}]}}},7459:(n,a,s)=>{s.r(a),s.d(a,{default:()=>g});var t=s(6252);const p=(0,t.uE)('<h1 id="序-spring-boot-入门" tabindex="-1"><a class="header-anchor" href="#序-spring-boot-入门" aria-hidden="true">#</a> 序 Spring Boot 入门</h1><h2 id="spring-boot-简介" tabindex="-1"><a class="header-anchor" href="#spring-boot-简介" aria-hidden="true">#</a> Spring Boot 简介</h2><p>SpringBoot 来简化Spring应用开发，约定大于配置，去繁从简，just run就能创建一个独立的，产品级别的应用。</p><blockquote><p>简化Spring应用开发的一个框架；</p><p>整个Spring技术栈的一个大整合；</p><p>J2EE开发的一站式解决方案；</p></blockquote><h2 id="优点" tabindex="-1"><a class="header-anchor" href="#优点" aria-hidden="true">#</a> 优点</h2><ul><li>快速创建独立运行的Spring项目以及与主流框架集成</li><li>使用嵌入式Servlet容器，应用无需打成WAR包</li><li>starters自动依赖与版本管理</li><li>大量的自动配置，简化开发，也可以修改默认值</li><li>无需配置XML，无代码生成，开箱即用</li><li>准生产环境的运行时应用监控</li><li>与云计算的天然集成</li></ul><h2 id="微服务" tabindex="-1"><a class="header-anchor" href="#微服务" aria-hidden="true">#</a> 微服务</h2><p>2014, martin fowler</p><p>微服务：架构风格</p><p>一个应用应该是一组小型服务；可以通过HTTP的方式进行互通。</p><p>单体应用： ALL IN ONE;</p><p>微服务：每一个功能元素最终都是一个可独立替换和独立升级的软件单元；</p>',12),e={href:"https://martinfowler.com/articles/microservices.html#MicroservicesAndSoa",target:"_blank",rel:"noopener noreferrer"},o=(0,t._)("h2",{id:"环境准备",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#环境准备","aria-hidden":"true"},"#"),(0,t.Uk)(" 环境准备")],-1),l=(0,t._)("p",null,"环境约束",-1),c=(0,t._)("p",null,'–jdk1.8：Spring Boot 推荐jdk1.7及以上；java version "1.8.0_112"',-1),i={href:"http://maven.apache.org/download.cgi",target:"_blank",rel:"noopener noreferrer"},r=(0,t.uE)('<p>–IntelliJIDEA2017：IntelliJ IDEA 2017.2.2 x64、STS</p><p>–SpringBoot 1.5.9.RELEASE：1.5.9；</p><p>统一环境；</p><h3 id="maven设置" tabindex="-1"><a class="header-anchor" href="#maven设置" aria-hidden="true">#</a> MAVEN设置；</h3><p>给maven 的settings.xml配置文件的profiles标签添加</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>profile</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">&gt;</span></span>jdk-1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>activation</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>activeByDefault</span><span class="token punctuation">&gt;</span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>activeByDefault</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>jdk</span><span class="token punctuation">&gt;</span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>jdk</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>activation</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>maven.compiler.source</span><span class="token punctuation">&gt;</span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>maven.compiler.source</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>maven.compiler.target</span><span class="token punctuation">&gt;</span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>maven.compiler.target</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>maven.compiler.compilerVersion</span><span class="token punctuation">&gt;</span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>maven.compiler.compilerVersion</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>profile</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h3 id="idea设置" tabindex="-1"><a class="header-anchor" href="#idea设置" aria-hidden="true">#</a> IDEA设置</h3><p>整合maven进来；</p><p><img src="image/201904051729.png" alt="idea设置"></p><p><img src="image/201904051731.png" alt="idea设置"></p><h2 id="spring-boot-helloworld" tabindex="-1"><a class="header-anchor" href="#spring-boot-helloworld" aria-hidden="true">#</a> Spring Boot HelloWorld</h2><p>一个功能：</p><p>浏览器发送hello请求，服务器接受请求并处理，响应Hello World字符串；</p><h3 id="创建一个maven工程-jar" tabindex="-1"><a class="header-anchor" href="#创建一个maven工程-jar" aria-hidden="true">#</a> 创建一个maven工程；（jar）</h3><h3 id="导入spring-boot相关的依赖" tabindex="-1"><a class="header-anchor" href="#导入spring-boot相关的依赖" aria-hidden="true">#</a> 导入spring boot相关的依赖</h3><h3 id="编写一个主程序-启动spring-boot应用" tabindex="-1"><a class="header-anchor" href="#编写一个主程序-启动spring-boot应用" aria-hidden="true">#</a> 编写一个主程序；启动Spring Boot应用</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**\n * @SpringBootApplication 来标注一个主程序类，说明这是一个Spring Boot应用\n */</span>\n<span class="token annotation punctuation">@SpringBootApplication</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HelloWorldMainApplication</span> <span class="token punctuation">{</span>\n\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\n        <span class="token comment">// Spring应用启动起来</span>\n        <span class="token class-name">SpringApplication</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">HelloWorldMainApplication</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h3 id="编写相关的controller、service" tabindex="-1"><a class="header-anchor" href="#编写相关的controller、service" aria-hidden="true">#</a> 编写相关的Controller、Service</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Controller</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HelloController</span> <span class="token punctuation">{</span>\n\n    <span class="token annotation punctuation">@ResponseBody</span>\n    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/hello&quot;</span><span class="token punctuation">)</span>\n    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">hello</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token string">&quot;Hello World&quot;</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h3 id="运行主程序测试" tabindex="-1"><a class="header-anchor" href="#运行主程序测试" aria-hidden="true">#</a> 运行主程序测试</h3><h3 id="简化部署" tabindex="-1"><a class="header-anchor" href="#简化部署" aria-hidden="true">#</a> 简化部署</h3><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code> <span class="token comment">&lt;!-- 这个插件，可以将应用打包成一个可执行的jar包；--&gt;</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">&gt;</span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-maven-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>将这个应用打成jar包，直接使用java -jar的命令进行执行；</p><h2 id="hello-world-探究" tabindex="-1"><a class="header-anchor" href="#hello-world-探究" aria-hidden="true">#</a> Hello World 探究</h2><h3 id="pomw文件" tabindex="-1"><a class="header-anchor" href="#pomw文件" aria-hidden="true">#</a> POMW文件</h3><h4 id="父项目" tabindex="-1"><a class="header-anchor" href="#父项目" aria-hidden="true">#</a> 父项目</h4><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>parent</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-parent<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.5.9.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>parent</span><span class="token punctuation">&gt;</span></span>\n\n他的父项目是\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>parent</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-dependencies<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.5.9.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>relativePath</span><span class="token punctuation">&gt;</span></span>../../spring-boot-dependencies<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>relativePath</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>parent</span><span class="token punctuation">&gt;</span></span>\n他来真正管理Spring Boot应用里面的所有依赖版本；\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>Spring Boot的版本仲裁中心；</p><p>以后我们导入依赖默认是不需要写版本；（没有在dependencies里面管理的依赖自然需要声明版本号）</p><h4 id="导入的依赖" tabindex="-1"><a class="header-anchor" href="#导入的依赖" aria-hidden="true">#</a> 导入的依赖</h4><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><strong>spring-boot-starter</strong>-==web==：</p><p>spring-boot-starter:spring-boot场景启动器：帮我们导入了web模块正常运行所依赖的组件；</p><p>Spring Boot将所有的功能场景都抽取出来，做成一个个的starters（启动器），只需要在项目里面引入这些starter相关场景的所有依赖都会导入进来。要用什么功能就导入什么场景的启动器</p><h3 id="主程序类-主入口类" tabindex="-1"><a class="header-anchor" href="#主程序类-主入口类" aria-hidden="true">#</a> 主程序类，主入口类</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**\n *  @SpringBootApplication 来标注一个主程序类，说明这是一个Spring Boot应用\n */</span>\n<span class="token annotation punctuation">@SpringBootApplication</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HelloWorldMainApplication</span> <span class="token punctuation">{</span>\n\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\n        <span class="token comment">// Spring应用启动起来</span>\n        <span class="token class-name">SpringApplication</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">HelloWorldMainApplication</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>@<strong>SpringBootApplication</strong>: Spring Boot应用标注在某个类上说明这个类是SpringBoot的主配置类，SpringBoot就应该运行这个类的main方法来启动SpringBoot应用；</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Target</span><span class="token punctuation">(</span><span class="token class-name">ElementType</span><span class="token punctuation">.</span><span class="token constant">TYPE</span><span class="token punctuation">)</span>\n<span class="token annotation punctuation">@Retention</span><span class="token punctuation">(</span><span class="token class-name">RetentionPolicy</span><span class="token punctuation">.</span><span class="token constant">RUNTIME</span><span class="token punctuation">)</span>\n<span class="token annotation punctuation">@Documented</span>\n<span class="token annotation punctuation">@Inherited</span>\n<span class="token annotation punctuation">@SpringBootConfiguration</span>\n<span class="token annotation punctuation">@EnableAutoConfiguration</span>\n<span class="token annotation punctuation">@ComponentScan</span><span class="token punctuation">(</span>excludeFilters <span class="token operator">=</span> <span class="token punctuation">{</span>\n      <span class="token annotation punctuation">@Filter</span><span class="token punctuation">(</span>type <span class="token operator">=</span> <span class="token class-name">FilterType</span><span class="token punctuation">.</span><span class="token constant">CUSTOM</span><span class="token punctuation">,</span> classes <span class="token operator">=</span> <span class="token class-name">TypeExcludeFilter</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      <span class="token annotation punctuation">@Filter</span><span class="token punctuation">(</span>type <span class="token operator">=</span> <span class="token class-name">FilterType</span><span class="token punctuation">.</span><span class="token constant">CUSTOM</span><span class="token punctuation">,</span> classes <span class="token operator">=</span> <span class="token class-name">AutoConfigurationExcludeFilter</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token keyword">public</span> <span class="token annotation punctuation">@interface</span> <span class="token class-name">SpringBootApplication</span> <span class="token punctuation">{</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>@<strong>SpringBootConfiguration</strong>:Spring Boot的配置类；</p><pre><code>标注在某个类上，表示这是一个Spring Boot的配置类；\n</code></pre><p>​ @<strong>Configuration</strong>:配置类上来标注这个注解；</p><p>​ 配置类 ----- 配置文件；配置类也是容器中的一个组件；@Component</p><p>@<strong>EnableAutoConfiguration</strong>：开启自动配置功能；</p><p>​ 以前我们需要配置的东西，Spring Boot帮我们自动配置；@<strong>EnableAutoConfiguration</strong>告诉SpringBoot开启自动配置功能；这样自动配置才能生效；</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@AutoConfigurationPackage</span>\n<span class="token annotation punctuation">@Import</span><span class="token punctuation">(</span><span class="token class-name">EnableAutoConfigurationImportSelector</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>\n<span class="token keyword">public</span> <span class="token annotation punctuation">@interface</span> <span class="token class-name">EnableAutoConfiguration</span> <span class="token punctuation">{</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>​ @<strong>AutoConfigurationPackage</strong>：自动配置包</p><p>​ @<strong>Import</strong>(AutoConfigurationPackages.Registrar.class)：</p><p>​ Spring的底层注解@Import，给容器中导入一个组件；导入的组件由AutoConfigurationPackages.Registrar.class；</p><p>==将主配置类（@SpringBootApplication标注的类）的所在包及下面所有子包里面的所有组件扫描到Spring容器；==</p><p>​ @<strong>Import</strong>(EnableAutoConfigurationImportSelector.class)；</p><p>​ 给容器中导入组件？</p><p>​ <strong>EnableAutoConfigurationImportSelector</strong>：导入哪些组件的选择器；</p><p>​ 将所有需要导入的组件以全类名的方式返回；这些组件就会被添加到容器中；</p><p>​ 会给容器中导入非常多的自动配置类（xxxAutoConfiguration）；就是给容器中导入这个场景需要的所有组件，并配置好这些组件；</p><p><img src="image/201904071616.png" alt="自动配置类"></p><p>有了自动配置类，免去了我们手动编写配置注入功能组件等的工作；</p><p>​ SpringFactoriesLoader.loadFactoryNames(EnableAutoConfiguration.class,classLoader)；</p><p>==Spring Boot在启动的时候从类路径下的META-INF/spring.factories中获取EnableAutoConfiguration指定的值，将这些值作为自动配置类导入到容器中，自动配置类就生效，帮我们进行自动配置工作；==以前我们需要自己配置的东西，自动配置类都帮我们；</p><p>J2EE的整体整合解决方案和自动配置都在spring-boot-autoconfigure-1.5.9.RELEASE.jar；</p><h2 id="使用spring-initializer快速创建spring-boot项目" tabindex="-1"><a class="header-anchor" href="#使用spring-initializer快速创建spring-boot项目" aria-hidden="true">#</a> 使用Spring Initializer快速创建Spring Boot项目</h2><h3 id="idea-使用-spring-initializer快速创建项目" tabindex="-1"><a class="header-anchor" href="#idea-使用-spring-initializer快速创建项目" aria-hidden="true">#</a> IDEA：使用 Spring Initializer快速创建项目</h3><p>IDE都支持使用Spring的项目创建向导快速创建一个Spring Boot项目；</p><p>选择我们需要的模块；向导会联网创建Spring Boot项目；</p><p>默认生成的Spring Boot项目；</p><ul><li>主程序已经生成好了，我们只需要我们自己的逻辑</li><li>resources文件夹中目录结构 <ul><li>static：保存所有的静态资源； js css images；</li><li>templates：保存所有的模板页面；（Spring Boot默认jar包使用嵌入式的Tomcat，默认不支持JSP页面）；可以使用模板引擎（freemarker、thymeleaf）；</li><li>application.properties：Spring Boot应用的配置文件；可以修改一些默认设置；</li></ul></li></ul><h3 id="sts使用-spring-starter-project快速创建项目" tabindex="-1"><a class="header-anchor" href="#sts使用-spring-starter-project快速创建项目" aria-hidden="true">#</a> STS使用 Spring Starter Project快速创建项目</h3><p>略</p>',67),u={},g=(0,s(3744).Z)(u,[["render",function(n,a){const s=(0,t.up)("OutboundLink");return(0,t.wg)(),(0,t.iD)(t.HY,null,[p,(0,t._)("p",null,[(0,t._)("a",e,[(0,t.Uk)("详细参照微服务文档"),(0,t.Wm)(s)])]),o,l,c,(0,t._)("p",null,[(0,t.Uk)("–maven3.x：maven 3.3以上版本；Apache Maven 3.3.9 "),(0,t._)("a",i,[(0,t.Uk)("MAVEN Download"),(0,t.Wm)(s)])]),r],64)}]])}}]);